orbs:
  codecov: codecov/codecov@3.2.5
  slack: circleci/slack@4.12.5
version: 2.1
executors:
  app-executor:
   docker:
     - image: cimg/node:16.17.0
     - image: cimg/redis:7.0.2
     - image: 'cibuilds/base:latest'
   working_directory: ~/repo
  slack-executor:
    docker:
    - image: "cibuilds/base:latest"
    resource_class: small

aliases:
 - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}
 - &restore-cache
   restore_cache:
    keys:
    - app-${{ checksum "package.json"}}
    - app-
 - &install-dependencies
    run:
      name: Install dependencies
      command: npm install
 - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
 - &notify-on-fail
    slack/notify:
      event: fail
      channel: 'besocial-app-backend-builds'
      template: ''
      custom: |
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "Job Failed. üî¥",
                "emoji": true
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Project*:\n$CIRCLE_PROJECT_REPONAME"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Job*: ${CIRCLE_JOB}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Branch*:\n$CIRCLE_BRANCH"
                },
                {
                  "type": "mrkdwn",
                  "text": "*When*:\n$(date +'%m/%d/%Y %T')"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Build*:\n$CIRCLE_BUILD_NUM"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Author*:\n$CIRCLE_PROJECT_USERNAME"
                }
              ]
            },
            {
              "type": "actions",
              "elements": [
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "View Job"
                  },
                  "url": "${CIRCLE_BUILD_URL}"
                }
              ]
            }
          ]
        }

jobs:
  install-dependencies:
      executor: app-executor
      steps:
        - checkout
        - *show-current-branch-name
        - *restore-cache
        - *install-dependencies
        - *save-cache
        - *notify-on-fail

  linting:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: Run linting
          command: npm run lint:check
      - *notify-on-fail

  code-formatter-check:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: Run prettier check
          command: npm run prettier:check
      - *notify-on-fail

  unit-test:
    executor: app-executor
    steps:
      - checkout
      - setup_remote_docker
      - *show-current-branch-name
      - *restore-cache
      - run:
          name: Start redis server
          command: docker run --name besocialapp-redis -p 6379:6379 -d redis
          background: true
      - run:
          name: Run unit test
          command: |
              sleep 3
              npm run test
      - codecov/upload
      - *notify-on-fail


  development_deployment_job:
    docker:
      - image: circleci/node:latest
    environment:
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --token=$VERCEL_TOKEN

  production_deployment_job:
    docker:
      - image: circleci/node:latest
    environment:
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --prod --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN


  notify-via-slack:
    executor: slack-executor
    steps:
      - run: echo "Slack notification"
      - slack/notify:
          event: 'always'
          channel: 'besocial-app-backend-builds'
          template: ''
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "‚úÖ üëç ‚úÖ ${CIRCLE_BRANCH} branch backend deployment is completed. ‚úÖ üëç ‚úÖ",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*:\n$CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job*: ${CIRCLE_JOB}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*:\n$CIRCLE_BRANCH"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*When*:\n$(date +'%m/%d/%Y %T')"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Build*:\n$CIRCLE_BUILD_NUM"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*:\n$CIRCLE_PROJECT_USERNAME"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

workflows:
  version: 2
  development_and_production:
    jobs:
      - install-dependencies
      - linting:
         requires:
            - install-dependencies
         filters:
            branches:
              only:
               - develop
               - staging
               - main
      - code-formatter-check:
          requires:
            - linting
          filters:
            branches:
              only:
                - develop
                - staging
                - main
      # - unit-test:
      #     requires:
      #       - code-formatter-check
      #     filters:
      #       branches:
      #         only:
      #           - develop
      #           - staging
      #           - main
      -  development_deployment_job:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - develop
      -  production_deployment_job:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - main

      - notify-via-slack:
          requires:
            - development_deployment_job
            - production_deployment_job
          filters:
            branches:
              only:
                - develop
                - staging
                - main


